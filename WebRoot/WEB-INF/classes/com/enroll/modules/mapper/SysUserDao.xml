<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.enroll.modules.mapper.SysUserDao">

	<insert id="save" parameterType="com.enroll.modules.pojo.SysUserEntity" useGeneratedKeys="true" keyProperty="userId">
		insert into sys_user
		(
			`userId`, 
			`username`, 
			`password`,
			`salt`,
			`email`, 
			`mobile`, 
			`status`,
			`enrollStatus`,			
			`createUserId`,
			`createTime`,
			`message`
		)
		values
		(
			#{userId},
			#{username},
			#{password},
			#{salt},
			#{email},
			#{mobile},
			#{status},
			#{enrollStatus},
			#{createUserId},
			#{createTime},
			#{message}
		)
	</insert>
	
	<update id="update" parameterType="com.enroll.modules.pojo.SysUserEntity">
		update sys_user 
		<set> 
			<if test="username != null">`username` = #{username}, </if>
			<if test="password != null">`password` = #{password}, </if>
			<if test="email != null">`email` = #{email}, </if>
			<if test="mobile != null">`mobile` = #{mobile}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="enrollStatus != null">`enrollStatus` = #{enrollStatus}, </if>
			<if test="message != null">`message` = #{message}, </if>
		</set>
		where userId = #{userId} 
		<if test="createUserId != null">
			and `createUserId` = #{createUserId} 
		</if>
	</update>
	
	<delete id="deleteBatch">
		delete from sys_user where userId in 
		<foreach item="userId" collection="array" open="(" separator="," close=")">
			#{userId}
		</foreach>
	</delete>
	
	<delete id="deleteRoleBatch">
		delete from sys_user_role where userId in 
		<foreach item="userId" collection="array" open="(" separator="," close=")">
			#{userId}
		</foreach>
	</delete>
	
	<select id="select" parameterType="Integer" resultType="com.enroll.modules.pojo.SysUserEntity">
		select * from sys_user where userId = #{id}
	</select>
	
	<select id="queryObject" resultType="com.enroll.modules.pojo.SysUserEntity">
		select * from sys_user where userId = #{value}
	</select>
	
	<select id="queryList" resultType="com.enroll.modules.pojo.SysUserEntity">
		select * from sys_user 
		<where>
			<if test="createUserId != null">
				and `createUserId` = #{createUserId} 
			</if>
			<if test="username != null and username.trim() != ''">
				and `username` like concat('%',#{username},'%') 
			</if>
		</where>
		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order}
			</when>
			<otherwise>
				order by userId desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
	<select id="queryTotal" resultType="int">
		select count(*) from sys_user
		<where>
			<if test="createUserId != null">
				and `createUserId` = #{createUserId} 
			</if>
			<if test="username != null and username.trim() != ''">
				and `username` like concat('%',#{username},'%')
			</if>
		</where>
	</select>

	<!-- 查询用户的所有权限 -->
	<select id="queryAllPerms" resultType="string">
		select m.perms from
		sys_user_role ur
		LEFT JOIN sys_role_menu rm on ur.roleId = rm.roleId
		LEFT JOIN sys_menu m on rm.menuId = m.menuId
		where ur.userId = #{userId}
	</select>
	
		<!-- 查询用户的所有菜单ID --> 
	<select id="queryAllMenuId" resultType="long">
		select distinct rm.menuId from sys_user_role ur 
			LEFT JOIN sys_role_menu rm on ur.roleId = rm.roleId 
		where ur.userId = #{userId}
	</select>
	
	<select id="queryByUserName" resultType="com.enroll.modules.pojo.SysUserEntity">
		select * from sys_user
		where username = #{username}
	</select>
	
	<select id="queryByEmail" resultType="com.enroll.modules.pojo.SysUserEntity">
		select * from sys_user
		where email = #{email}
	</select>
	
	<select id="queryByPhone" resultType="com.enroll.modules.pojo.SysUserEntity">
		select * from sys_user
		where mobile = #{phone}
	</select>
	
	<update id="updatePassword" parameterType="map">
		update sys_user set `password` = #{newPassword} 
			where userId = #{userId} and password = #{password}
	</update>
	
</mapper>